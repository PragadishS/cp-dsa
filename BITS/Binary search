Binary search 


	LOWER BOUND - 

#include <bits/stdc++.h>
using namespace std;
int main() {
    // Given vector
    vector<int> v = {1, 3, 5, 7, 9, 10};          
    
    // Iterator
    auto it = lower_bound(v.begin(), v.end(), 12); 
    int pos = (it - v.begin());
    cout << "The index is: " << pos << endl;
    cout<< "The value is: "<<*it <<endl;
    return 0;
}

REPLACE THE LOWER BOUND FUNCTION WITH UPPER BOUND THATS ALL



ï¿¼int lo = 0, hi = n-1, ans = -1;
while( lo <= hi ){
  int mid = lo + (hi-lo)/2;
  if(isGood(mid)){
    ans = mid;
    hi = mid - 1;
  }
  else {
    lo = mid+1;
  }
}


Note: If you do (lo+hi)/2, there is a possibility of integer overflow when low and high are large integers. 
This can lead to incorrect results or even undefined behavior. That's why we do mid = lo + (hi-low)/2.
