FLOYD WARSHALL ALGO 

IT IS ALSO A FORM OF SHORTEST PATH , BUT THE THING IS HERE IT TAKES NOT ONE NODE AS A SOURCE BUT IT TAKES EVERY NODE AS A SOURCE AND FINDS THE SHORTEST PATH TO EVERY OTHER NODE 


NOTE: INSTEAD OF USING ADJ LIST , IT IS BETTER TO USE ADJ MATRIX HERE


// GOD SPEED 
// Author : il-pragadish-aak

// g++-13 r1.cpp -ld_classic
#include<bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/assoc_container.hpp>
#define int long long
#define MOD 1000000007
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
//           float/variable  greater / less_equal or greater_equal - multiset
// pbds functions - *A.find_by_order(0) = indexing 0th index
// pbds functions - A.order_of_key(6) = no. of elements smaller than 6
signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int n;
    cin>>n;
    int a[n][n];
    for(int i=0;i<n;i++){
      for(int j=0;j<n;j++){
         cin>>a[i][j];
      }
    }

    for(int i=0;i<n;i++){
      for(int j=0;j<n;j++){
         if(a[i][j]==-1){
            a[i][j]=1e18;
         }else if(i==j){
            a[i][j]=0;
         }
      }
    }

    for(int k=0;k<n;k++){
      for(int i=0;i<n;i++){
         for(int j=0;j<n;j++){
            a[i][j]=min(a[i][j],(a[i][k]+a[k][j]));
         }
      }
    }

    
    // we print the answer now

    for(int i=0;i<n;i++){
      for(int j=0;j<n;j++){
         cout<<a[i][j]<<" ";
      }
      cout<<endl;
    }


    
    return 0;
}
